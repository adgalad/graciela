
/*% LANGUAGE MemoryOperations  %*/
module Memory begin

	// extern func hola(x : int) -> int


	abstract MemA begin {repinv true repinv} end

	type Mem(T) implements MemA begin
		{repinv true repinv}
	
		{coupinv true coupinv}
	
		proc malloc (in m : Mem(T), in n : int, out x : T*)
			{pre  true  pre}
			{post true post}
			|[ 
				var arr : (array[n] of T)*;
				new(arr);
				x := &((*arr)[0]);
			]| 
	end
end